# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="XH33fTcx3S/lE`xweDgA5[BZTMR=JmesvVQVw=UH`@yCHyyW14:NED`^r7K>HwRA"

# The application languages
# ~~~~~
application.langs="en-US,zh,ja"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.
# logger.root=ERROR
# logger.play=INFO
# logger.application=DEBUG
# logger.models=DEBUG

app.domain=app.io
app.hostname="http://127.0.0.1:9000"

play.akka.actor.default-dispatcher.fork-join-executor.parallelism-max=8
play.akka.actor.default-dispatcher.fork-join-executor.parallelism-min=8
mailer-context.fork-join-executor.parallelism-max=4
traffic-shaper-context.fork-join-executor.parallelism-max=4

cassandra.cql.log=[batch,insert,update,delete]
cassandra.fetch-size=0

elasticsearch.client.uri="elasticsearch://127.0.0.1:9300"
elasticsearch.cluster.name=elasticsearch_name

controllers.api.rate_limit.limit=5000
controllers.api.rate_limit.span=15

controllers.api.bandwidth.max=5M
controllers.api.bandwidth.min=200K

controllers.files.bandwidth.upload=1.5M
controllers.files.bandwidth.download=1M
controllers.files.bandwidth.stream=1M

services.mailer.admin.email-addresses=["admin@app.io"]

models.cfs.files.stream-fetch-size=5000
models.cfs.files.list-fetch-size=0

akka {
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port=2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://application@127.0.0.1:2551",
      "akka.tcp://application@127.0.0.1:2552"
    ]
    auto-down-unreachable-after = 10s
  }

  log-config-on-start = "off"
  loglevel=INFO

  extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]

  contrib.cluster.pub-sub {
    routing-logic = random
    gossip-interval = 1s
  }

  persistence.journal.leveldb.dir = "target/journal"
  persistence.snapshot-store.local.dir = "target/snapshots"

  contrib.cluster.sharding {
    handoff-timeout = 60 s
  }
}

mimetype {
  mkv:video/x-matroska
}

app.wiki.video=wiki.mp4

mailer {
  noreply {
    smtp.host=smtp.app.io
    smtp.port=465
    smtp.ssl=yes
    smtp.user="noreply@app.io"
    smtp.password="******"
  },
  support {
    smtp.host=smtp.app.io
    smtp.port=465
    smtp.ssl=yes
    smtp.user="support@app.io"
    smtp.password="******"
  }
}