# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# API routes
->   /api                                   api.Routes

# Home page
GET  /                                      controllers.Application.index
GET  /wiki                                  controllers.Application.wiki
GET  /about                                 controllers.Application.about

#TODO BEIGIN remove this line
POST /schemas/recreate                      controllers.Application.recreate
#TODO END

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                          controllers.Assets.at(path="/public", file)

GET  /cfs/show/$path<.*>                    controllers.Files.show(path:Path)
GET  /cfs/stream/$path<.*>                  controllers.Files.stream(path:Path)
GET  /cfs/download/$path<.*>                controllers.Files.download(path:Path,inline:Boolean?=false)
GET  /cfs/$path<.*>                         controllers.Files.index(path:Path,p:Pager?=Pager.first)
POST /cfs/$path<.*>                         controllers.Files.create(path:Path)
POST /cfs/destroy/:id                       controllers.Files.destroy(id:UUID)

GET  /login                                 controllers.Sessions.nnew
POST /login                                 controllers.Sessions.create
POST /logout                                controllers.Sessions.destroy

GET  /join                                  controllers.Users.nnew
POST /join                                  controllers.Users.create
POST /signup_check/username                 controllers.Users.checkEmail
POST /signup_check/password                 controllers.Users.checkPassword

GET  /my/dashboard                          controllers.My.dashboard

GET  /users                                 controllers.Users.index(p:Pager?=Pager.first)
GET  /users/:id                             controllers.Users.show(id:UUID)

GET  /groups                                controllers.Groups.index(p:Pager?=Pager.first)
POST /groups                                controllers.Groups.create(p:Pager?=Pager.first)
POST /groups/check_name                     controllers.Groups.checkName
POST /groups/:id                            controllers.Groups.save(id:UUID)

GET  /password_reset                        controllers.PasswordReset.nnew
POST /password_reset                        controllers.PasswordReset.create
GET  /password_reset/:id                    controllers.PasswordReset.show(id:String)
POST /password_reset/:id                    controllers.PasswordReset.save(id:String)

GET  /email_templates                       controllers.EmailTemplates.index(p:Pager?=Pager.first)
GET  /email_templates/new                   controllers.EmailTemplates.nnew
POST /email_templates/new                   controllers.EmailTemplates.create
GET  /email_templates/edit/:id              controllers.EmailTemplates.edit(id:UUID,lang:Lang)
GET  /email_templates/show/:id              controllers.EmailTemplates.show(id:UUID,lang:Lang,updated_on:Option[DateTime]?=None)
POST /email_templates/:id                   controllers.EmailTemplates.save(id:UUID,lang:Lang)
GET  /email_templates/hisotry/:id           controllers.EmailTemplates.history(id:UUID,lang:Lang,p:Pager?=Pager.first)
POST /email_templates/destroy/:id           controllers.EmailTemplates.destroy(id:UUID,lang:Lang)

GET  /access_controls                       controllers.AccessControls.index(p:Pager?=Pager.first)
POST /access_controls                       controllers.AccessControls.create(p:Pager?=Pager.first)
POST /access_controls/:p/:r/:a/:i           controllers.AccessControls.save(p:UUID,r:String,a:String,i:Boolean)
POST /access_controls/destroy/:p/:r/:a/:i   controllers.AccessControls.destroy(p:UUID,r:String,a:String,i:Boolean)