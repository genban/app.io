# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# API routes
->   /api                                   api.Routes
->   /sockets                               sockets.Routes

# Home page
GET  /                                      controllers.Application.index
GET  /wiki                                  controllers.Application.wiki
GET  /about                                 controllers.Application.about

GET  /chat                                  controllers.ChatCtrl.chat

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                          controllers.Assets.at(path="/public", file)

GET  /cfs/show/$path<.*>                    controllers.CFSCtrl.show(path:Path)
GET  /cfs/$path<.*>                         controllers.CFSCtrl.index(path:Path,p:Pager?=Pager.first)

GET  /login                                 controllers.SessionsCtrl.nnew
POST /login                                 controllers.SessionsCtrl.create
POST /logout                                controllers.SessionsCtrl.destroy

GET  /join                                  controllers.UsersCtrl.nnew
POST /join                                  controllers.UsersCtrl.create
POST /signup_check/username                 controllers.UsersCtrl.checkEmail
POST /signup_check/password                 controllers.UsersCtrl.checkPassword

GET  /my/dashboard                          controllers.MyCtrl.dashboard
GET  /settings/account                      controllers.MyCtrl.account
POST /settings/account                      controllers.MyCtrl.changePassword
GET  /settings/profile                      controllers.MyCtrl.profile
POST /settings/profile                      controllers.MyCtrl.changeProfile

GET  /users                                 controllers.UsersCtrl.index(p:Pager?=Pager.first)
GET  /users/:id                             controllers.UsersCtrl.show(id:UUID)

GET  /groups                                controllers.GroupsCtrl.index(p:Pager?=Pager.first)
POST /groups/check_name                     controllers.GroupsCtrl.checkName
GET  /groups/:id                            controllers.GroupsCtrl.show(id:UUID)

GET  /password_reset                        controllers.PasswordResetCtrl.nnew(email?="")
POST /password_reset                        controllers.PasswordResetCtrl.create
GET  /password_reset/:id                    controllers.PasswordResetCtrl.show(id)
POST /password_reset/:id                    controllers.PasswordResetCtrl.save(id)

GET  /email_templates                       controllers.EmailTemplatesCtrl.index(p:Pager?=Pager.first)
GET  /email_templates/new                   controllers.EmailTemplatesCtrl.nnew
POST /email_templates/new                   controllers.EmailTemplatesCtrl.create
GET  /email_templates/edit/:id              controllers.EmailTemplatesCtrl.edit(id:UUID,lang:Lang)
GET  /email_templates/show/:id              controllers.EmailTemplatesCtrl.show(id:UUID,lang:Lang,updated_at:Option[DateTime]?=None)
POST /email_templates/:id                   controllers.EmailTemplatesCtrl.save(id:UUID,lang:Lang)
GET  /email_templates/hisotry/:id           controllers.EmailTemplatesCtrl.history(id:UUID,lang:Lang,p:Pager?=Pager.first)
POST /email_templates/destroy/:id           controllers.EmailTemplatesCtrl.destroy(id:UUID,lang:Lang)

GET  /access_controls                       controllers.AccessControlsCtrl.index(p:Pager?=Pager.first)